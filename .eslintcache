[{"/Users/achimschneider/Documents/Privat/apps/kanban-board/src/index.tsx":"1","/Users/achimschneider/Documents/Privat/apps/kanban-board/src/reportWebVitals.ts":"2","/Users/achimschneider/Documents/Privat/apps/kanban-board/src/App.tsx":"3","/Users/achimschneider/Documents/Privat/apps/kanban-board/src/components/submitTask/SubmitTask.tsx":"4","/Users/achimschneider/Documents/Privat/apps/kanban-board/src/components/kanbanBoard/KanbanBoard.tsx":"5","/Users/achimschneider/Documents/Privat/apps/kanban-board/src/common.ts":"6","/Users/achimschneider/Documents/Privat/apps/kanban-board/src/store/tasks/tasksReducer.ts":"7","/Users/achimschneider/Documents/Privat/apps/kanban-board/src/store/ui/uiReducer.ts":"8","/Users/achimschneider/Documents/Privat/apps/kanban-board/src/components/taskList/TaskList.tsx":"9","/Users/achimschneider/Documents/Privat/apps/kanban-board/src/store/selectors.ts":"10","/Users/achimschneider/Documents/Privat/apps/kanban-board/src/components/taskList/Task.tsx":"11","/Users/achimschneider/Documents/Privat/apps/kanban-board/src/store/index.ts":"12"},{"size":500,"mtime":1608291932314,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1608291932315,"results":"15","hashOfConfig":"14"},{"size":618,"mtime":1609240894979,"results":"16","hashOfConfig":"14"},{"size":1311,"mtime":1610449094936,"results":"17","hashOfConfig":"14"},{"size":620,"mtime":1610456620003,"results":"18","hashOfConfig":"14"},{"size":98,"mtime":1609240894980,"results":"19","hashOfConfig":"14"},{"size":937,"mtime":1610469756208,"results":"20","hashOfConfig":"14"},{"size":1687,"mtime":1610469390242,"results":"21","hashOfConfig":"14"},{"size":1203,"mtime":1610466411626,"results":"22","hashOfConfig":"14"},{"size":384,"mtime":1610456351385,"results":"23","hashOfConfig":"14"},{"size":3555,"mtime":1610469669022,"results":"24","hashOfConfig":"14"},{"size":676,"mtime":1609240894981,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"tjefst",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/achimschneider/Documents/Privat/apps/kanban-board/src/index.tsx",[],["54","55"],"/Users/achimschneider/Documents/Privat/apps/kanban-board/src/reportWebVitals.ts",[],"/Users/achimschneider/Documents/Privat/apps/kanban-board/src/App.tsx",[],"/Users/achimschneider/Documents/Privat/apps/kanban-board/src/components/submitTask/SubmitTask.tsx",[],"/Users/achimschneider/Documents/Privat/apps/kanban-board/src/components/kanbanBoard/KanbanBoard.tsx",[],"/Users/achimschneider/Documents/Privat/apps/kanban-board/src/common.ts",[],"/Users/achimschneider/Documents/Privat/apps/kanban-board/src/store/tasks/tasksReducer.ts",[],"/Users/achimschneider/Documents/Privat/apps/kanban-board/src/store/ui/uiReducer.ts",[],"/Users/achimschneider/Documents/Privat/apps/kanban-board/src/components/taskList/TaskList.tsx",["56"],"import { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useSelector } from \"../../store/index\";\nimport Task from \"./Task\";\nimport { TaskStatus } from \"../../common\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    minHeight: \"14vw\",\n  },\n}));\n\ninterface Props {\n  status: TaskStatus;\n  title: string;\n}\n\nconst TaskList = ({ status, title }: Props) => {\n  const classes = useStyles();\n  const taskIds = useSelector(\n    (store: IRootState) => store.ui.taskStatus[status]\n  );\n  const updateId = useSelector((store: IRootState) => store.ui.updateId);\n  return (\n    <Paper>\n      <div className={classes.root} id={`${status}`}>\n        <Typography variant=\"h6\" align=\"center\">\n          {title}\n        </Typography>\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n          {taskIds.map((taskId: string) => (\n            <Task taskId={taskId} key={`${taskId}`} />\n          ))}\n        </List>\n      </div>\n    </Paper>\n  );\n};\n\nexport default TaskList;\n","/Users/achimschneider/Documents/Privat/apps/kanban-board/src/store/selectors.ts",[],["57","58"],"/Users/achimschneider/Documents/Privat/apps/kanban-board/src/components/taskList/Task.tsx",["59","60"],"import { useDispatch, useSelector } from \"../../store/index\";\nimport { TaskStatus } from \"../../common\";\nimport { map, switchMap, take, takeUntil } from \"rxjs/operators\";\nimport {\n  Button,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { fromEvent, merge } from \"rxjs\";\nimport { useEffect, useState } from \"react\";\nimport { taskByIdSelector } from \"../../store/selectors\";\n\ninterface Props {\n  taskId: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: \"1px solid black\",\n    margin: \"10px\",\n  },\n}));\n\nconst Task = ({ taskId }: Props) => {\n  const task = useSelector(taskByIdSelector(taskId));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    const box = document.querySelector<HTMLDivElement>(\n      `#task${task.id}`\n    ) as HTMLDivElement;\n    const mousedown$ = fromEvent<MouseEvent>(box as Element, \"mousedown\");\n    const mousemove$ = fromEvent<MouseEvent>(document, \"mousemove\");\n    const mouseup$ = fromEvent<MouseEvent>(document, \"mouseup\");\n    const drag$ = mousedown$.pipe(\n      switchMap((start) => {\n        return merge(\n          mousemove$.pipe(\n            map((move) => {\n              move.preventDefault();\n              return {\n                type: \"move\",\n                x: move.x - start.x,\n                y: move.y - start.y,\n              };\n            }),\n            takeUntil(mouseup$)\n          ),\n          mouseup$.pipe(\n            map((endPos) => {\n              return {\n                type: \"end\",\n                x: endPos.clientX,\n                y: endPos.clientY,\n              };\n            }),\n            take(1)\n          )\n        );\n      })\n    );\n    drag$.subscribe((pos) => {\n      switch (pos.type) {\n        case \"move\":\n          box.style.transform = `translate(${pos?.x}px, ${pos?.y}px)`;\n          break;\n        case \"end\":\n          const path = document\n            .elementsFromPoint(pos.x, pos.y)\n            .map((el) => el && el.id);\n          const tasks = Object.values(TaskStatus);\n          const status = tasks.filter((task) => path.includes(task))[0];\n          if (status) {\n            const type: Actions = \"SET_STATUS\";\n            const TaskBox = document.querySelector(`#${status}`);\n            let TaskPos: any;\n            if (TaskBox)\n              TaskPos = Object.values(\n                TaskBox.querySelectorAll('[id^=\"task\"]')\n              ).map((div) =>\n                Math.abs(\n                  div.getBoundingClientRect().top -\n                    document.body.getBoundingClientRect().top -\n                    pos.y\n                )\n              );\n            const order = TaskPos.indexOf(Math.min(...TaskPos));\n            if (status) {\n              const action = {\n                type,\n                id: task.id,\n                status: status,\n                order,\n              };\n              dispatch(action);\n            }\n          }\n          box.style.transform = `translate(0px, 0px)`;\n      }\n    });\n  }, []);\n\n  return (\n    <div id={`task${task.id}`} className={classes.root}>\n      <ListItem>\n        <ListItemIcon></ListItemIcon>\n        <ListItemText primary={task.title} />\n        <ListItemIcon>\n          {task.status === TaskStatus.Done && (\n            <Button onClick={() => dispatch({ type: \"DELETE\", id: task.id })}>\n              <Close />\n            </Button>\n          )}\n        </ListItemIcon>\n      </ListItem>\n    </div>\n  );\n};\n\nexport default Task;\n","/Users/achimschneider/Documents/Privat/apps/kanban-board/src/store/index.ts",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":27,"column":9,"nodeType":"67","messageId":"68","endLine":27,"endColumn":17},{"ruleId":"61","replacedBy":"69"},{"ruleId":"63","replacedBy":"70"},{"ruleId":"65","severity":1,"message":"71","line":13,"column":21,"nodeType":"67","messageId":"68","endLine":13,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":104,"column":6,"nodeType":"74","endLine":104,"endColumn":8,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"@typescript-eslint/no-unused-vars","'updateId' is assigned a value but never used.","Identifier","unusedVar",["76"],["77"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'task.id'. Either include them or remove the dependency array.","ArrayExpression",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [dispatch, task.id]",{"range":"81","text":"82"},[3088,3090],"[dispatch, task.id]"]