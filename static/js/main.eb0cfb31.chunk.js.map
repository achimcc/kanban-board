{"version":3,"sources":["common.ts","store/taskList/reducer.ts","store/store.ts","components/taskList/Task.tsx","store/taskList/actionCreators.ts","components/taskList/TaskList.tsx","components/kanbanBoard/KanbanBoard.tsx","components/submitTask/SubmitTask.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TaskStatus","TaskActions","initialState","tasks","id","title","status","ToDo","Doing","Done","itemListReducer","state","action","console","log","type","Create","newItem","Math","random","payload","taskTitle","concat","SetStatus","taskId","updatedTasks","map","task","Delete","newTasks","filter","item","store","createStore","combineReducers","Direction","moveTask","direction","statusArr","Object","values","statusIndex","indexOf","Left","updateTask","Task","dispatch","useDispatch","ListItem","ListItemIcon","Button","onClick","SkipPrevious","ListItemText","primary","Right","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","TaskList","classes","useSelector","Paper","className","Typography","variant","align","List","component","aria-label","KanbanBoard","Container","Grid","container","spacing","xs","grid","SubmitTask","React","useState","taskName","setTaskName","Box","m","alignItems","justifyContent","TextField","label","value","onChange","event","currentTarget","justify","p","color","App","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb0cfb31.chunk.js","sourcesContent":["enum TaskStatus {\n    ToDo = \"TO DO\",\n    Doing = \"DOING\",\n    Done = \"DONE\"\n}\n\nenum TaskActions {\n    Create = \"CREATE\",\n    SetStatus = \"SET_STATUS\",\n    Delete = \"DELETE\"\n}\n\nexport {TaskStatus, TaskActions}","import {TaskStatus, TaskActions} from \"../../common\"\n\nconst initialState: TasksState = {\n  tasks: [\n    {\n      id: 1,\n      title: \"item 1\",\n      status: TaskStatus.ToDo\n    },\n    {\n      id: 2,\n      title: \"item 2\",\n      status: TaskStatus.Doing\n    },\n    {\n      id: 3,\n      title: \"item 3\",\n      status: TaskStatus.Done\n    }\n  ],\n}\n\nconst itemListReducer = (\n    state: TasksState = initialState,\n    action: TaskAction\n  ): TasksState => {\n    console.log('reducer!', state, action)\n    switch (action.type) {\n      case TaskActions.Create:\n        const newItem: ITask = {\n          id: Math.random(), \n          title: action.payload.taskTitle,\n          status: TaskStatus.ToDo\n        }\n        return {\n          ...state,\n          tasks: state.tasks.concat(newItem),\n        }\n      case TaskActions.SetStatus:\n        console.log('updating task: ', action.payload)\n        const {taskId, status} = action.payload\n        const updatedTasks: ITask[] = state.tasks.map(\n          task => task.id === taskId ? {...task, status} : task\n        )\n        return {\n          ...state,\n          tasks: updatedTasks\n        }\n        case TaskActions.Delete:\n        const newTasks: ITask[] = state.tasks.filter(\n          item => item.id !== action.payload.taskId\n        )\n        return {\n          ...state,\n          tasks: newTasks\n        }\n    }\n    return state\n  }\n  \n  export default itemListReducer","import { combineReducers, createStore } from 'redux';\nimport itemListReducer from './taskList/reducer';\n\nconst store = createStore<IRootState, any, any, any>(\n    combineReducers({\n        tasks: itemListReducer\n}));\n\nexport default store;","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { updateTask, removeTask } from \"../../store/taskList/actionCreators\";\nimport { TaskStatus } from \"../../common\";\n\nimport {\n  Button,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { SkipPrevious } from \"@material-ui/icons\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\ninterface Props {\n  task: ITask;\n}\n\nenum Direction {\n  Left,\n  Right,\n}\n\nconst moveTask = (task: ITask, direction: Direction) => {\n  const statusArr = Object.values(TaskStatus);\n  const statusIndex =\n    statusArr.indexOf(task.status) + (direction === Direction.Left ? -1 : 1);\n  const status =\n    statusIndex > -1 && statusIndex < 3 ? statusArr[statusIndex] : task.status;\n  return updateTask(task.id, status);\n};\n\nconst Task = ({ task }: Props) => {\n  const dispatch = useDispatch();\n  return (\n    <ListItem>\n      <ListItemIcon>\n        {task.status !== TaskStatus.ToDo && (\n          <Button onClick={() => dispatch(moveTask(task, Direction.Left))}>\n            <SkipPrevious />\n          </Button>\n        )}\n      </ListItemIcon>\n      <ListItemText primary={task.title} />\n      <ListItemIcon>\n        {task.status == TaskStatus.Done ? (\n          <Button onClick={() => dispatch(removeTask(task.id))}>\n            <CloseIcon />\n          </Button>\n        ) : (\n          <Button onClick={() => dispatch(moveTask(task, Direction.Right))}>\n            <SkipNextIcon />\n          </Button>\n        )}\n      </ListItemIcon>\n    </ListItem>\n  );\n};\n\nexport default Task;\n","import {TaskActions, TaskStatus} from \"../../common\"\n\nexport function addTask(taskTitle: string):TaskAction {\n  const action = {\n    type: TaskActions.Create,\n    payload: {taskTitle}\n  }\n  return action\n}\n\nexport function updateTask(taskId: Number, status: TaskStatus):TaskAction {\n  console.log('updateTaskCreator ')\n  const action: TaskAction = {\n    type: TaskActions.SetStatus,\n    payload: {status, taskId}\n  }\n  return action\n}\n\nexport function removeTask(taskId: Number):TaskAction {\n  const action: TaskAction = {\n    type: TaskActions.Delete,\n    payload: {taskId}\n  }\n  return action\n}\n\n","import * as React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useSelector } from \"react-redux\";\nimport Task from \"./Task\";\nimport { TaskStatus } from \"../../common\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\ninterface Props {\n  type: TaskStatus;\n  title: string;\n}\n\nconst TaskList = ({ type, title }: Props) => {\n  const classes = useStyles();\n  const tasks = useSelector((store: IRootState) =>\n    store.tasks.tasks.filter((task: ITask) => task.status === type)\n  );\n  return (\n    <Paper>\n      <div className={classes.root}>\n        <Typography variant=\"h6\" align=\"center\">\n          {title}\n        </Typography>\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n          {tasks.map((task: ITask) => (\n            <Task task={task} key={task.id} />\n          ))}\n        </List>\n      </div>\n    </Paper>\n  );\n};\n\nexport default TaskList;\n","import * as React from \"react\";\nimport TaskList from \"../taskList/TaskList\";\nimport { TaskStatus } from \"../../common\";\nimport { Container, Grid } from \"@material-ui/core\";\n\nconst KanbanBoard = () => {\n  const grid = (type: TaskStatus) => {\n    return (\n      <Grid item xs={4}>\n        <TaskList type={type} key={type} title={type} />\n      </Grid>\n    );\n  };\n  return (\n    <Container>\n      <Grid container spacing={1}>\n        {Object.values(TaskStatus).map((type) => grid(type))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default KanbanBoard;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { TextField, Button, Grid, Box } from \"@material-ui/core\";\nimport { addTask } from \"../../store/taskList/actionCreators\";\n\nexport default function SubmitTask() {\n  const dispatch = useDispatch();\n  const [taskName, setTaskName] = React.useState(\"\");\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTaskName(event.currentTarget.value);\n  };\n  const handleClick = () => {\n    const action = addTask(taskName);\n    dispatch(action);\n    setTaskName(\"\");\n  };\n\n  return (\n    <Box m=\"auto\" alignItems=\"center\" justifyContent=\"center\">\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <TextField\n            id=\"standard-name\"\n            label=\"Task Name\"\n            value={taskName}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item container xs={6} alignItems=\"center\" justify=\"center\">\n          <Box p={2}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>\n              Submit Task\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport KanbanBoard from \"./components/kanbanBoard/KanbanBoard\";\nimport SubmitTask from \"./components/submitTask/SubmitTask\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Typography variant=\"h4\" align=\"center\">\n          Kanban Board App\n        </Typography>\n        <Box display=\"flex\">\n          <SubmitTask />\n        </Box>\n        <KanbanBoard />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}