{"version":3,"sources":["common.ts","store/tasks/tasksReducer.ts","store/ui/uiReducer.ts","store/index.ts","components/taskList/Task.tsx","store/selectors.ts","components/taskList/TaskList.tsx","components/kanbanBoard/KanbanBoard.tsx","components/submitTask/SubmitTask.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TaskStatus","initialState","tasks","byIds","title","allIds","tasksReducer","state","action","produce","draft","type","id","push","idToDelete","filter","taskStatus","ToDo","Doing","Done","updateId","nanoid","uiReducer","console","log","status","idToUpdate","Object","values","forEach","store","createStore","combineReducers","data","ui","useDispatch","dispatch","_useDispatch","_useSelector","createSelectorHook","useSelector","fn","x","useStyles","makeStyles","theme","root","border","margin","Task","taskId","task","find","includes","taskData","classes","useEffect","box","document","querySelector","mousedown$","fromEvent","mousemove$","mouseup$","pipe","switchMap","start","merge","map","move","preventDefault","y","takeUntil","endPos","clientX","clientY","take","subscribe","pos","style","transform","path","elementsFromPoint","el","res","className","ListItem","ListItemIcon","ListItemText","primary","Button","onClick","Close","width","backgroundColor","palette","background","paper","minHeight","TaskList","taskIds","Paper","Typography","variant","align","List","component","aria-label","KanbanBoard","Container","Grid","container","spacing","item","xs","grid","SubmitTask","React","useState","taskName","setTaskName","Box","m","alignItems","justifyContent","TextField","label","value","onChange","event","currentTarget","justify","p","color","App","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e37914bb.chunk.js","sourcesContent":["enum TaskStatus {\n  ToDo = \"TO_DO\",\n  Doing = \"DOING\",\n  Done = \"DONE\",\n}\n\nexport { TaskStatus };\n","import { produce } from \"immer\";\n\nconst initialState: TasksState = {\n  tasks: {\n    byIds: {\n      \"1\": {\n        title: \"item 1\",\n      },\n      \"2\": {\n        title: \"item 2\",\n      },\n      \"3\": {\n        title: \"item 3\",\n      },\n    },\n    allIds: [\"1\", \"2\", \"3\"],\n  },\n};\n\nconst tasksReducer = (\n  state: TasksState = initialState,\n  action: TaskAction\n): TasksState =>\n  produce(state, (draft: TasksState) => {\n    switch (action.type) {\n      case \"CREATE\": {\n        const { title, id } = action;\n        draft.tasks.byIds[id] = { id, title };\n        draft.tasks.allIds.push(id);\n        break;\n      }\n      case \"DELETE\":\n        const { id: idToDelete } = action;\n        delete draft.tasks.byIds[idToDelete];\n        draft.tasks.allIds = draft.tasks.allIds.filter(\n          (id) => id !== idToDelete\n        );\n        break;\n    }\n  });\n\nexport default tasksReducer;\n","import { TaskStatus } from \"../../common\";\nimport { produce } from \"immer\";\nimport { nanoid } from \"nanoid\";\n\nconst initialState: UIState = {\n  taskStatus: {\n    [TaskStatus.ToDo]: [1],\n    [TaskStatus.Doing]: [2],\n    [TaskStatus.Done]: [3],\n  },\n  updateId: nanoid(6),\n};\n\nconst uiReducer = (\n  state: UIState = initialState,\n  action: TaskAction\n): UIState =>\n  produce(state, (draft: UIState) => {\n    console.log(action);\n    switch (action.type) {\n      case \"CREATE\": {\n        const { id } = action;\n        draft.taskStatus[TaskStatus.ToDo].push(id);\n        break;\n      }\n      case \"SET_STATUS\": {\n        const { status: taskStatus, id: idToUpdate } = action;\n        Object.values(TaskStatus).forEach((status) => {\n          draft.taskStatus[status] = draft.taskStatus[status].filter(\n            (id: string) => id !== idToUpdate\n          );\n          if (taskStatus === status) {\n            draft.taskStatus[status].push(idToUpdate);\n          }\n        });\n        draft.updateId = nanoid(6);\n        break;\n      }\n      case \"DELETE\": {\n        const { id: idToDelete } = action;\n        Object.values(TaskStatus).forEach(\n          (status) =>\n            (draft.taskStatus[status] = draft.taskStatus[status].filter(\n              (id: string) => id !== idToDelete\n            ))\n        );\n        break;\n      }\n    }\n  });\n\nexport default uiReducer;\n","import { createSelectorHook, useDispatch as _useDispatch } from \"react-redux\";\nimport { combineReducers, createStore } from \"redux\";\nimport tasksReducer from \"./tasks/tasksReducer\";\nimport uiReducer from \"./ui/uiReducer\";\n\nconst store = createStore<IRootState, any, any, any>(\n  combineReducers({\n    data: tasksReducer,\n    ui: uiReducer,\n  })\n);\n\nfunction useDispatch(): DispatchType {\n  const dispatch = _useDispatch();\n  return (action: TaskAction) => dispatch(action);\n}\n\nconst _useSelector = createSelectorHook<IRootState>();\n\nfunction useSelector<T>(fn: (store: IRootState) => T): T {\n  return fn(_useSelector((x) => x));\n}\n\nexport { store, useDispatch, useSelector };\n","import { useDispatch, useSelector } from \"../../store/index\";\nimport { TaskStatus } from \"../../common\";\nimport { map, switchMap, take, takeUntil } from \"rxjs/operators\";\nimport {\n  Button,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { fromEvent, merge } from \"rxjs\";\nimport { useEffect } from \"react\";\nimport { taskByIdSelector } from \"../../store/selectors\";\n\ninterface Props {\n  taskId: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: \"1px solid black\",\n    margin: \"10px\",\n  },\n}));\n\nconst Task = ({ taskId }: Props) => {\n  const task = useSelector(taskByIdSelector(taskId));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    const box = document.querySelector<HTMLDivElement>(\n      `#task${task.id}`\n    ) as HTMLDivElement;\n    const mousedown$ = fromEvent<MouseEvent>(box as Element, \"mousedown\");\n    const mousemove$ = fromEvent<MouseEvent>(document, \"mousemove\");\n    const mouseup$ = fromEvent<MouseEvent>(document, \"mouseup\");\n    const drag$ = mousedown$.pipe(\n      switchMap((start) => {\n        return merge(\n          mousemove$.pipe(\n            map((move) => {\n              move.preventDefault();\n              return {\n                type: \"move\",\n                x: move.x - start.x,\n                y: move.y - start.y,\n              };\n            }),\n            takeUntil(mouseup$)\n          ),\n          mouseup$.pipe(\n            map((endPos) => {\n              return {\n                type: \"end\",\n                x: endPos.clientX,\n                y: endPos.clientY,\n              };\n            }),\n            take(1)\n          )\n        );\n      })\n    );\n    drag$.subscribe((pos) => {\n      if (pos.type === \"move\")\n        box.style.transform = `translate(${pos?.x}px, ${pos?.y}px)`;\n      else if (pos.type === \"end\") {\n        const path = document\n          .elementsFromPoint(pos.x, pos.y)\n          .map((el) => el && el.id);\n        const tasks = Object.values(TaskStatus);\n        const res = tasks.filter((task) => path.includes(task))[0];\n        const type: Actions = \"SET_STATUS\";\n        if (res) {\n          const action = {\n            type,\n            id: task.id,\n            status: res,\n          };\n          dispatch(action);\n        }\n      }\n    });\n  }, []);\n\n  return (\n    <div id={`task${task.id}`} className={classes.root}>\n      <ListItem>\n        <ListItemIcon></ListItemIcon>\n        <ListItemText primary={task.title} />\n        <ListItemIcon>\n          {task.status === TaskStatus.Done && (\n            <Button onClick={() => dispatch({ type: \"DELETE\", id: task.id })}>\n              <Close />\n            </Button>\n          )}\n        </ListItemIcon>\n      </ListItem>\n    </div>\n  );\n};\n\nexport default Task;\n","import { TaskStatus } from \"../common\";\n\nconst taskByIdSelector = (id: string) => (store: IRootState): ITask => {\n  const status =\n    Object.values(TaskStatus).find((status) =>\n      store.ui.taskStatus[status].includes(id)\n    ) || TaskStatus.ToDo;\n  const taskData = store.data.tasks.byIds[id];\n  return {\n    id,\n    status,\n    ...taskData,\n  };\n};\n\nexport { taskByIdSelector };\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useSelector } from \"../../store/index\";\nimport Task from \"./Task\";\nimport { TaskStatus } from \"../../common\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    minHeight: \"14vw\",\n  },\n}));\n\ninterface Props {\n  status: TaskStatus;\n  title: string;\n}\n\nconst TaskList = ({ status, title }: Props) => {\n  const classes = useStyles();\n  const taskIds = useSelector(\n    (store: IRootState) => store.ui.taskStatus[status]\n  );\n  const updateId = useSelector((store: IRootState) => store.ui.updateId);\n  console.log(taskIds);\n  return (\n    <Paper>\n      <div className={classes.root} id={`${status}`}>\n        <Typography variant=\"h6\" align=\"center\">\n          {title}\n        </Typography>\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n          {taskIds.map((taskId: string) => (\n            <Task taskId={taskId} key={`${taskId}/${updateId}`} />\n          ))}\n        </List>\n      </div>\n    </Paper>\n  );\n};\n\nexport default TaskList;\n","import * as React from \"react\";\nimport TaskList from \"../taskList/TaskList\";\nimport { TaskStatus } from \"../../common\";\nimport { Container, Grid } from \"@material-ui/core\";\n\nconst KanbanBoard = () => {\n  const grid = (status: TaskStatus) => {\n    console.log(status);\n    return (\n      <Grid item xs={4} key={status}>\n        <TaskList status={status} key={status} title={status} />\n      </Grid>\n    );\n  };\n  return (\n    <Container id={\"kanban\"}>\n      <Grid container spacing={1}>\n        {Object.values(TaskStatus).map((status) => grid(status))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default KanbanBoard;\n","import React from \"react\";\nimport { useDispatch } from \"../../store/index\";\nimport { TextField, Button, Grid, Box } from \"@material-ui/core\";\nimport { nanoid } from \"nanoid\";\n\nexport default function SubmitTask() {\n  const dispatch = useDispatch();\n  const [taskName, setTaskName] = React.useState(\"\");\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTaskName(event.currentTarget.value);\n  };\n  const handleClick = () => {\n    const type: Actions = \"CREATE\";\n    const action = {\n      type,\n      title: taskName,\n      id: nanoid(6),\n    };\n    dispatch(action);\n    setTaskName(\"\");\n  };\n\n  return (\n    <Box m=\"auto\" alignItems=\"center\" justifyContent=\"center\">\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <TextField\n            id=\"standard-name\"\n            label=\"Task Name\"\n            value={taskName}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item container xs={6} alignItems=\"center\" justify=\"center\">\n          <Box p={2}>\n            <Button\n              variant=\"contained\"\n              id={\"btn-submit\"}\n              color=\"primary\"\n              onClick={handleClick}\n            >\n              Submit Task\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/index\";\nimport KanbanBoard from \"./components/kanbanBoard/KanbanBoard\";\nimport SubmitTask from \"./components/submitTask/SubmitTask\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Typography variant=\"h4\" align=\"center\">\n          Kanban Board App\n        </Typography>\n        <Box display=\"flex\">\n          <SubmitTask />\n        </Box>\n        <KanbanBoard />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}